version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # Puerto de conexión AMQP
      - "15672:15672"    # Panel de administración RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - hospital-net

  hospital-api:
    container_name: hospital-api
    build:
      context: .               # 📍 Usa la carpeta raíz como contexto
      dockerfile: Dockerfile   # 📍 Usa el Dockerfile que moviste al root
    image: hospital-api:latest # Etiqueta de la imagen generada
    ports:
      - "8080:8080"            # Exponer puerto HTTP
    depends_on:
      - rabbitmq
    environment:
      # 🧩 Configuración de RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      # 🧠 Conexión Mongo Atlas
      SPRING_DATA_MONGODB_URI: mongodb+srv://mongouser:asus123@hospitalcluster.0dey0la.mongodb.net/hospitalapi?retryWrites=true&w=majority&appName=hospitalCluster

      # (Opcional) Perfil activo en Spring Boot
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - hospital-net
    restart: unless-stopped   # 🔁 Reinicia si el contenedor se detiene inesperadamente

networks:
  hospital-net:
    driver: bridge

